// Returns the value in a map associated with the given key.
// If the map doesn't have such a key, returns null.
map-get(hash, key)
    return val if keys == key for keys, val in hash

// Breakpoint viewport sizes and media queries.
//
// Breakpoints are defined as a map of (name: minimum width), order from small to large:
//
//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)
//
// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.

// Name of the next breakpoint, or null for the last breakpoint.
//
//    >> breakpoint-next(sm)
//    md
//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    md
//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))
//    md

breakpoint-next($name, $breakpoints = $grid-breakpoints, $breakpoint-names = keys($breakpoints))
	$n = index($breakpoint-names, $name)
	return $n < length($breakpoint-names) - 1 ? nth($breakpoint-names, $n + 1) : null


// Minimum breakpoint width. Null for the smallest (first) breakpoint.
//
//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    576px
breakpoint-min($name, $breakpoints = $grid-breakpoints)
	$min = map-get($breakpoints, $name)
	return $min != 0 ? $min : null


// Maximum breakpoint width. Null for the largest (last) breakpoint.
// The maximum value is calculated as the minimum of the next one less 0.02px
// to work around the limitations of `min-` and `max-` prefixes and viewports with fractional widths.
// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max
// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.
// See https://bugs.webkit.org/show_bug.cgi?id=178261
//
//    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    767.98px

breakpoint-max($name, $breakpoints = $grid-breakpoints)
	$next = breakpoint-next($name, $breakpoints)
	return $next ? breakpoint-min($next, $breakpoints) - .02px : null
  

// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash infront.
// Useful for making responsive utilities.
//
//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    ""  (Returns a blank string)
//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    "-sm"
breakpoint-infix($name, $breakpoints = $grid-breakpoints)
	return breakpoint-min($name, $breakpoints) == null ? "" : "-" + $name
	
// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.
// Makes the @content apply to the given breakpoint and wider.
media-breakpoint-up($name, $breakpoints = $grid-breakpoints)
	$min = breakpoint-min($name, $breakpoints)
	if $min 
		@media (min-width: $min)
			{block}		
	else
		{block}
 
// Media of at most the maximum breakpoint width. No query for the largest breakpoint.
// Makes the @content apply to the given breakpoint and narrower.
media-breakpoint-down($name, $breakpoints = $grid-breakpoints)
	$max = breakpoint-max($name, $breakpoints)
	if $max 
		@media (max-width: $max)
			{block}
	else
		{block}